apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: web
          env:
            - name: POSTGRES_PASSWORD
              value: "Mytestpwd#123"
            - name: TZ
              value: "Asia/Shanghai"
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: infrastructure
spec:
  type: NodePort
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
      nodePort: 30432
      name: tcp-postgres
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: elasticsearch
  replicas: 1
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      containers:
        - name: elasticsearch
          image: elasticsearch:7.11.1
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9200
              name: web
          env:
            - name: discovery.type
              value: "single-node"
            - name: ES_JAVA_OPTS
              value: "-Xms64m -Xmx512m"
            - name: TZ
              value: "Asia/Shanghai"
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: infrastructure
spec:
  selector:
    app: elasticsearch
  ports:
    - protocol: TCP
      port: 9200
      targetPort: 9200
      name: tcp-elasticsearch
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: infrastructure
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 6379
              name: web
          env:
            - name: TZ
              value: "Asia/Shanghai"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: infrastructure
spec:
  selector:
    app: redis
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
      name: tcp-redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  namespace: dapreshop
spec:
  selector:
    matchLabels:
      app: apigateway
  replicas: 1
  template:
    metadata:
      labels:
        app: apigateway
      annotations:
        dapr.io/enabled: "true"
        dapr.io/app-id: "apigateway"
        dapr.io/app-port: "80"
    spec:
      containers:
        - name: web
          image: apigateway:latest
          imagePullPolicy: IfNotPresent
          readinessProbe:
            httpGet:
              path: v1.0/healthz
              port: 3500
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds : 5
            failureThreshold : 3
          ports:
            - containerPort: 80
              name: web
          env:
            - name: TZ
              value: "Asia/Shanghai"
---
apiVersion: v1
kind: Service
metadata:
  name: apigateway
  namespace: dapreshop
spec:
  selector:
    app: apigateway
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: statestore
  namespace: dapreshop
spec:
  type: state.redis
  version: v1
  metadata:
  - name: actorStateStore
    value: "true"
  - name: redisHost
    value: redis.infrastructure.svc.cluster.local:6379
  - name: keyPrefix
    value: none
---
apiVersion: dapr.io/v1alpha1
kind: Component
metadata:
  name: pubsub
  namespace: dapreshop
spec:
  type: pubsub.redis
  version: v1
  metadata:
  - name: redisHost
    value: redis.infrastructure.svc.cluster.local:6379